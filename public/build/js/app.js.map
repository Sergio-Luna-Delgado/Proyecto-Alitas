{"version":3,"sources":["app.js"],"names":["host","async","eliminarProducto","id","confirm","url","datos","FormData","append","opciones","method","body","resultado","fetch","respuesta","json","alert","message","location","reload","error","console","log","validarComprar","status","window","href","data","$","modal","eliminarProductoCarrito","confirmarCompra","fecha","Date","hora","toLocaleTimeString","dia","getFullYear","getMonth","getDate","actualizarPasword","passwordActual","document","querySelector","value","passwordNuevo","passwordModal","bootstrap","Modal","getInstance","hide","reporteInventario","btnImprimir","addEventListener","reporteBotones","classList","toggle","print"],"mappings":"AAAA,IAAIA,KAAO,4CAIXC,eAAeC,iBAAiBC,GAC5B,GAAIC,QAAQ,yCAAyCD,MACjD,IAEI,MAAME,EAAML,KAAO,4BAGbM,EAAQ,IAAIC,SAClBD,EAAME,OAAO,KAAML,GACnB,MAAMM,EAAW,CACbC,OAAQ,OACRC,KAAML,GAIJM,QAAkBC,MAAMR,EAAKI,GAC7BK,QAAkBF,EAAUG,OAElCC,MAAMF,EAAUG,SAChBC,SAASC,SAEX,MAAOC,GACLC,QAAQC,IAAIF,IAMxBnB,eAAesB,eAAepB,GAC1B,IACI,MAAME,EAAML,KAAO,cAEbM,EAAQ,IAAIC,SAClBD,EAAME,OAAO,KAAML,GACnB,MAAMM,EAAW,CACbC,OAAQ,OACRC,KAAML,GAGJM,QAAkBC,MAAMR,EAAKI,GAC7BK,QAAkBF,EAAUG,OAEV,SAApBD,EAAUU,QACVR,MAAMF,EAAUG,SAChBQ,OAAOP,SAASQ,KAAO,UAGvBD,OAAOP,SAASQ,KAAO,gBAAkBvB,EAG/C,MAAOiB,GACLC,QAAQC,IAAIF,GAGG,SAAfO,KAAKH,QACLR,MAAMW,KAAKV,SACXQ,OAAOP,SAASQ,KAAO,cAGvBE,EAAE,YAAczB,GAAI0B,MAAM,QAKlC5B,eAAe6B,wBAAwB3B,GACnC,GAAIC,QAAQ,8CACR,IACI,MAAMC,EAAML,KAAO,oBAEbM,EAAQ,IAAIC,SAClBD,EAAME,OAAO,KAAML,GACnB,MAAMM,EAAW,CACbC,OAAQ,OACRC,KAAML,GAGJM,QAAkBC,MAAMR,EAAKI,GAC7BK,QAAkBF,EAAUG,OAElCC,MAAMF,EAAUG,SAChBC,SAASC,SAEX,MAAOC,GACLC,QAAQC,IAAIF,IAMxBnB,eAAe8B,kBAEX,MAAMC,EAAQ,IAAIC,KAClB,IAAIC,EAAOF,EAAMG,qBACbC,EAAMJ,EAAMK,cAAgB,KAAQL,EAAMM,WAAa,GAAM,IAAMN,EAAMO,UAE7E,GAAInC,QAAQ,gCACR,IACI,MAAMC,EAAML,KAAO,UAEbM,EAAQ,IAAIC,SAClBD,EAAME,OAAO,OAAQ0B,GACrB5B,EAAME,OAAO,MAAO4B,GACpB,MAAM3B,EAAW,CACbC,OAAQ,OACRC,KAAML,GAGJM,QAAkBC,MAAMR,EAAKI,GAC7BK,QAAkBF,EAAUG,OAElCC,MAAMF,EAAUG,SAChBQ,OAAOP,SAASQ,KAAO,WAEzB,MAAON,GACLC,QAAQC,IAAIF,IAMxBnB,eAAeuC,oBACX,MAAMC,EAAiBC,SAASC,cAAc,mBAAmBC,MAC3DC,EAAgBH,SAASC,cAAc,kBAAkBC,MACzDE,EAAgBJ,SAASC,cAAc,kBACvCd,EAAQkB,UAAUC,MAAMC,YAAYH,GAG1C,IACI,MAAMzC,EAAML,KAAO,WAEbM,EAAQ,IAAIC,SAClBD,EAAME,OAAO,iBAAkBiC,GAC/BnC,EAAME,OAAO,gBAAiBqC,GAC9B,MAAMpC,EAAW,CACbC,OAAQ,OACRC,KAAML,GAGJM,QAAkBC,MAAMR,EAAKI,GAC7BK,QAAkBF,EAAUG,OAElCC,MAAMF,EAAUG,SACQ,YAArBH,EAAUU,QACTK,EAAMqB,OAGZ,MAAO9B,GACLC,QAAQC,IAAIF,IAMpBnB,eAAekD,oBAGX,IACI,MAAM9C,EAAML,KAAO,iCAUKa,MAAMR,GAKhC,MAAOe,GACLC,QAAQC,IAAIF,IAIpB,MAAMgC,YAAcV,SAASC,cAAc,gBACvCS,aACAA,YAAYC,iBAAiB,SAAS,WAClC,MAAMC,EAAiBZ,SAASC,cAAc,mBAC9CW,EAAeC,UAAUC,OAAO,UAChC/B,OAAOgC,QACPH,EAAeC,UAAUC,OAAO","file":"app.js","sourcesContent":["let host = 'https://alitas-legendarias.herokuapp.com/';\r\n// let host = 'http://localhost:3000/';\r\n\r\n/* Se elimina el producto del inventario pero primero se muestra una alerta */\r\nasync function eliminarProducto(id) {\r\n    if (confirm(`多Estas seguro de eliminar el registro ${id}?`)) {\r\n        try {\r\n            /* Esta es la url que voy a consumir */\r\n            const url = host + 'admin/inventario/eliminar';\r\n\r\n            /* En jQuery esto equivale al data  */\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const opciones = {\r\n                method: 'POST',\r\n                body: datos\r\n            }\r\n\r\n            /* El await espera hasta que descargue todo y detiene la ejecucion de todo lo que este abajo */\r\n            const resultado = await fetch(url, opciones);\r\n            const respuesta = await resultado.json();\r\n\r\n            alert(respuesta.message);\r\n            location.reload();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n/* Muestra una alerta si el usuario ha iniciado sesion primero */\r\nasync function validarComprar(id) {\r\n    try {\r\n        const url = host + 'validarUser';\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        const opciones = {\r\n            method: 'POST',\r\n            body: datos\r\n        }\r\n\r\n        const resultado = await fetch(url, opciones);\r\n        const respuesta = await resultado.json();\r\n\r\n        if (respuesta.status == \"error\") {\r\n            alert(respuesta.message);\r\n            window.location.href = \"/login\";\r\n        }\r\n        else {\r\n            window.location.href = \"/platillo?id=\" + id;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    if (data.status == \"error\") {\r\n        alert(data.message);\r\n        window.location.href = \"/login.php\"\r\n    }\r\n    else {\r\n        $('#detalles' + id).modal('show');\r\n    }\r\n}\r\n\r\n/* Se elimina el producto del carrito pero primero se muestra una alerta */\r\nasync function eliminarProductoCarrito(id) {\r\n    if (confirm(`多Quieres quitar este platillo del carrito?`)) {\r\n        try {\r\n            const url = host + '/eliminarPlatillo';\r\n\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const opciones = {\r\n                method: 'POST',\r\n                body: datos\r\n            }\r\n\r\n            const resultado = await fetch(url, opciones);\r\n            const respuesta = await resultado.json();\r\n\r\n            alert(respuesta.message);\r\n            location.reload();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n/* funcion de compra */\r\nasync function confirmarCompra() {\r\n    /* hora locales de la maquina y no del server */\r\n    const fecha = new Date();\r\n    let hora = fecha.toLocaleTimeString();\r\n    let dia = fecha.getFullYear() + '-' + ( fecha.getMonth() + 1 ) + '-' + fecha.getDate();\r\n    \r\n    if (confirm(`多Deseas confirmar la compra?`)) {\r\n        try {\r\n            const url = host + 'comprar';\r\n\r\n            const datos = new FormData();\r\n            datos.append('hora', hora);\r\n            datos.append('dia', dia);\r\n            const opciones = {\r\n                method: 'POST',\r\n                body: datos\r\n            }\r\n\r\n            const resultado = await fetch(url, opciones);\r\n            const respuesta = await resultado.json();\r\n\r\n            alert(respuesta.message);\r\n            window.location.href = \"/pedidos\";\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n/* funcion para actualizar la contrase単a del usuario */\r\nasync function actualizarPasword() {\r\n    const passwordActual = document.querySelector('#passwordActual').value;\r\n    const passwordNuevo = document.querySelector('#passwordNuevo').value;\r\n    const passwordModal = document.querySelector('#passwordModal');\r\n    const modal = bootstrap.Modal.getInstance(passwordModal)\r\n    \r\n    \r\n    try {\r\n        const url = host + 'password';\r\n\r\n        const datos = new FormData();\r\n        datos.append('passwordActual', passwordActual);\r\n        datos.append('passwordNuevo', passwordNuevo);\r\n        const opciones = {\r\n            method: 'POST',\r\n            body: datos\r\n        }\r\n\r\n        const resultado = await fetch(url, opciones);\r\n        const respuesta = await resultado.json();\r\n\r\n        alert(respuesta.message);\r\n        if(respuesta.status === 'success') {\r\n            modal.hide();\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n/* Reporte Inventario */\r\nasync function reporteInventario() {\r\n    // const reporteInventario = document.querySelector('#reporteInventario');\r\n    \r\n    try {\r\n        const url = host + 'admin/reporte/inventario';\r\n\r\n        // const datos = new FormData();\r\n        // datos.append('passwordActual', passwordActual);\r\n        // datos.append('passwordNuevo', passwordNuevo);\r\n        // const opciones = {\r\n        //     method: 'POST',\r\n        //     body: datos\r\n        // }\r\n\r\n        const resultado = await fetch(url);\r\n        // const respuesta = await resultado.json();\r\n\r\n        // alert(respuesta.message);\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst btnImprimir = document.querySelector('#btnImprimir'); \r\nif (btnImprimir) {\r\n    btnImprimir.addEventListener('click', function() {\r\n        const reporteBotones = document.querySelector('#reporteBotones');\r\n        reporteBotones.classList.toggle('d-none');\r\n        window.print();\r\n        reporteBotones.classList.toggle('d-none');\r\n    });\r\n}"]}